#1 
import tensorflow as tf
import matplotlib.pyplot as plt
from tensorflow import keras
import numpy as np

#2
(x_train, y_train), (x_test, y_test) = keras.datasets.fashion_mnist.load_data()

#3
plt.imshow(x_train[1])

#4
plt.imshow(x_train[0])

#5
x_train = x_train.astype('float32') / 255.0
x_test = x_test.astype('float32') / 255.0

#6
x_train = x_train.reshape(-1, 28, 28, 1)
x_test = x_test.reshape(-1, 28, 28, 1)

#7
x_train.shape

#8
x_test.shape

#9
y_train.shape

#10
y_test.shape

#11
model = keras.Sequential([
    keras.layers.Conv2D(32, (3,3), activation="relu", input_shape=(28,28,1)),
    keras.layers.MaxPooling2D((2,2)),
    keras.layers.Dropout(0.25),
    keras.layers.Conv2D(64, (3,3), activation="relu"),
    keras.layers.MaxPooling2D((2,2)),
    keras.layers.Dropout(0.25),
    keras.layers.Conv2D(128, (3,3), activation="relu"),
    keras.layers.Flatten(),
    keras.layers.Dense(10, activation="softmax")
])

#12
model.summary()

#13
model.compile(optimizer="adam", loss="sparse_categorical_crossentropy", metrics=['accuracy'])
history = model.fit(x_train, y_train, epochs = 10, validation_data = (x_test, y_test))

#14
test_loss, test_acc = model.evaluate(x_test, y_test)

#15
print("Test accuracy:", test_acc)
